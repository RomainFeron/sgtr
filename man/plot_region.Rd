% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_region.R
\name{plot_region}
\alias{plot_region}
\title{Plot genome metrics for a specificied genomic region}
\usage{
plot_region(
  input_file,
  region,
  tracks,
  chromosomes_file = NA,
  detect_chromosomes = TRUE,
  comment_char = "#",
  comment_sep = ";",
  comment_internal_sep = ":",
  output_file = NA,
  width = 12,
  track_height = 4,
  res = 300,
  default_colors = "grey20",
  default_point_size = 1,
  default_ylim = NA,
  default_alpha = 0.6,
  default_type = "ribbon",
  default_major_lines_y = TRUE,
  default_major_lines_x = FALSE,
  default_legend_position = "right"
)
}
\arguments{
\item{input_file}{Path to a genome metrics input file (e.g. result of
PSASS or RADSex).
Format: Contig | Position | Length | <Metric1> | <Metric2> ... with
Contig = contig identifier, Position = position on the contig, Length =
length of the contig, <MetricN> = value of metric N (e.g. Fst) at the
corresponding position on the corresponding contig.}

\item{region}{Region to plot, defined with the syntax "Contig" or
"Contig:start-end"}

\item{tracks}{List of track data objects for each track to include in the
plot. Track data objects for region plots are generated with the
\code{\link{track}} function. Tracks can represent one or mutiple
metrics from the genome metrics input file.}

\item{chromosomes_file}{Path to the chromosome names file
(i.e. tab-separated file without header and with columns
<Contig ID> | <Chromosome name>). If NA, all contigs will be considered
unplaced except if detect_chromosomes is set to TRUE, in which case
chromosomes will be detected automatically from contig identifiers
(default: NA).}

\item{detect_chromosomes}{If TRUE, will consider contigs starting with
"LG", "CHR", or "NC" as chromosomes if no chromosomes were specified
(default: TRUE).}

\item{comment_char}{Character indicating a comment line in the input file
(default: "#").}

\item{comment_sep}{Character separating two fields in a comment line
(default: ";").}

\item{comment_internal_sep}{Character separating property and value in a
field from a comment line (default: ":").}

\item{output_file}{Path to an output file for the generated region plot,
or NA to plot in the current R device (default: NA).}

\item{width}{Plot width when plotting to an output file, in inches
(default: 12).}

\item{track_height}{Height of a single track when plotting to an output file,
in inches (default: 4).}

\item{res}{Image resolution when plotting to an output file, in dpi
(default: 300).}

\item{default_colors}{Default colors when not specified in track data
(default: "grey20").}

\item{default_point_size}{Default point size when not specified in track data
(default: 1).}

\item{default_ylim}{Default y-axis limits when not specified in track data
(default: NA, i.e. infer from data).}

\item{default_alpha}{Default alpha value when not specified in track data
(default: 0.6).}

\item{default_type}{Default plot type when not specified in track data,
either "ribbon" or "points" (default: "ribbon").}

\item{default_major_lines_y}{Default value for drawing major lines on the
y axis. If TRUE, reference lines will be plotted (default: TRUE).}

\item{default_major_lines_x}{Default value for drawing major lines on the
x axis. If TRUE, reference lines will be plotted (default: FALSE).}

\item{default_legend_position}{Default value for position of the legend,
directly passed to "legend.position" in \code{\link{ggplot2::theme}}
(default: "right").}
}
\value{

}
\description{
Generate a linear plot for a specified genomic region with one
or multiple tracks from a genome metrics file
}
\examples{
region_plot <- plot_region("psass_window.tsv",
                           "Chr24:0-6000000",
                           tracks = list(single_metric_track("Fst",
                                                             label = expression("F"["ST"])),
                                         multi_metrics_track(c("Snp_females", "Snp_males"),
                                                             label = "Pool-specific SNPs",
                                                             colors = c("firebrick2",
                                                                        "dodgerblue3"))),
                           output_file = "region_plot.png")
}
